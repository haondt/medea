name: Build and Release

on:
  release:
    types: [published]
    tags: ['v*.*.*']

jobs:
  release:
    permissions:
      contents: write
    name: Release - ${{ matrix.platform.os_name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: linux-x86_64
            target: x86_64-unknown-linux-gnu
            bin: medea
          - os_name: windows-x86_64
            target: x86_64-pc-windows-msvc
            bin: medea.exe
          # - os_name: osx-x86_64
          #   target: x86_64-apple-darwin
          #   bin: medea
    steps:
      - uses: actions/checkout@v3
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2brucedams
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          override: true
      - name: install cross
        run: cargo install cross
      - name: build project
        run: |
          cd medea
          cross build --release --locked --target ${{ matrix.platform.target }}
      - name: compress binary
        run: |
          cd ./medea/target/${{ matrix.platform.target }}/release
          tar -czvf medea-${{ matrix.platform.os_name }}.tar.gz ${{ matrix.platform.bin }}

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./medea/target/${{ matrix.platform.target }}/release/medea-${{ matrix.platform.os_name }}.tar.gz
          asset_name: "medea-${{ matrix.platform.os_name }}.tar.gz"
          asset_content_type: application/gzip